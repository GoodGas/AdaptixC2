name: Build Adaptix C2

on:
  workflow_dispatch:  # 手动触发

jobs:
  build-server:
    name: Build Server and Extenders
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y mingw-w64 make
    
    - name: Setup Go 1.24.4
      run: |
        wget https://go.dev/dl/go1.24.4.linux-amd64.tar.gz -O /tmp/go1.24.4.linux-amd64.tar.gz
        sudo rm -rf /usr/local/go
        sudo tar -C /usr/local -xzf /tmp/go1.24.4.linux-amd64.tar.gz
        echo "/usr/local/go/bin" >> $GITHUB_PATH
    
    - name: Clone go-win7 for Windows 7 support
      run: |
        git clone https://github.com/Adaptix-Framework/go-win7 /tmp/go-win7
        sudo mv /tmp/go-win7 /usr/lib/
    
    - name: Build server
      run: make server
    
    - name: Build extenders
      run: make extenders
    
    - name: Upload server artifacts
      uses: actions/upload-artifact@v4
      with:
        name: server-${{ matrix.os }}-${{ matrix.arch }}
        path: dist/*

  build-client-linux:
    name: Build Client for Linux
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y gcc g++ build-essential make cmake libssl-dev
        sudo apt install -y qt6-base-dev qt6-websockets-dev qt6-declarative-dev
    
    - name: Build client
      run: make client
    
    - name: Upload client artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-linux-amd64
        path: dist/AdaptixClient

  build-client-macos:
    name: Build Client for macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        brew install make cmake openssl qt@6
        echo "$(brew --prefix qt@6)/bin" >> $GITHUB_PATH
    
    - name: Build client
      run: make client
    
    - name: Upload client artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-macos-amd64
        path: dist/AdaptixClient

  build-client-windows:
    name: Build Client for Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.6.*'
        modules: 'qtwebsockets'
        cache: true
    
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
    
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      working-directory: build
      run: cmake --build . --config Release
    
    - name: Package with dependencies
      run: |
        mkdir dist-windows
        copy build\Release\AdaptixClient.exe dist-windows\
        windeployqt dist-windows\AdaptixClient.exe
    
    - name: Upload client artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-windows-amd64
        path: dist-windows/*

  create-release:
    name: Create Release
    needs: [build-server, build-client-linux, build-client-macos, build-client-windows]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Display structure
      run: ls -la artifacts/
    
    - name: Create timestamp
      id: timestamp
      run: echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
    
    - name: Package artifacts
      run: |
        cd artifacts
        for dir in */; do
          zip -r "${dir%/}.zip" "$dir"
        done
    
    - name: Upload final artifacts
      uses: actions/upload-artifact@v4
      with:
        name: adaptix-c2-build-${{ steps.timestamp.outputs.timestamp }}
        path: artifacts/*.zip
        retention-days: 30
